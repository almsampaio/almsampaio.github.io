{"version":3,"sources":["assets/logo.svg","components/LandingPageLayout/styles.ts","components/LandingPageLayout/index.tsx","hooks/auth.tsx","services/api.ts","pages/Login/styles.ts","pages/Login/index.tsx","pages/ForgotPassword/styles.ts","pages/ForgotPassword/index.tsx","pages/ResetPassword/styles.ts","pages/ResetPassword/index.tsx","components/QuizPageLayout/styles.ts","components/QuizPageLayout/index.tsx","components/TextInput/styles.ts","components/TextInput/index.tsx","components/FactOrFakeQuestion/styles.ts","components/FactOrFakeQuestion/index.tsx","pages/QuizForm/styles.ts","pages/QuizForm/index.tsx","assets/close.svg","pages/QuizDownload/styles.ts","pages/QuizDownload/index.tsx","routes/PrivateRoute.tsx","styles/global.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","SubContainer","Hero","FormBordersDesign","section","FormContainer","LandingPageLayout","children","src","logoImg","alt","className","AuthContext","createContext","useAuth","useContext","auth","updateAuth","AuthProvider","useState","token","rehydrated","setAuth","useEffect","data","localStorage","getItem","prevState","JSON","parse","rehydrate","setItem","stringify","Provider","value","api","axios","create","baseURL","Form","form","Login","history","useHistory","useForm","register","handleSubmit","errors","formState","onSubmit","user","a","post","headers","push","console","log","required","message","pattern","email","type","password","to","ForgotPassword","ResetPassword","getValues","validate","confirm","Aside","aside","AsideContainer","AsideBordersDesign","QuizPageLayout","InputContainer","TextInput","error","label","id","placeholder","htmlFor","IndexAndQuestion","OptionsAndDescriptions","FactOrFakeQuestion","index","question","factText","fakeText","fileInput","padStart","Quiz","QuizForm","title","name","defaultValue","disabled","hidden","map","QuizDownload","closeImg","PrivateRoute","path","render","location","pathname","state","from","GlobalStyle","createGlobalStyle","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.974aced8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b440d572.svg\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SubContainer = styled.div`\n  width: 90rem;\n  margin-right: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Hero = styled.div`\n  margin-left: 8rem;\n  display: flex;\n  align-items: center;\n  position: relative;\n\n  width: 31.25rem;\n  height: 21.875rem;\n\n  border: 5px solid var(--shape);\n  border-radius: 50px;\n\n  z-index: 0;\n  img {\n    width: 15rem;\n    height: 15rem;\n    position: absolute;\n    transform: translate(-50%, 0%);  \n    z-index: 1;\n  }\n  \n  h1 {\n    color: var(--shape);\n    font-size: 6rem;\n    padding-left: 11.5rem;\n    transform: translate(0%, -5%);  \n    z-index: 2;\n  }\n`;\n\nexport const FormBordersDesign = styled.section`\n  position: relative;\n  width: 35.75rem;\n  height: 44rem;\n  background: var(--shape);\n  border-radius: 50px;\n\n  div.blue-shadow {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: var(--secondary-color);\n    transform: translate(-1.5rem, 1.5rem);\n    border-radius: 50px;\n    z-index: -1;\n  }\n\n  div.blue-border {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border: 5px solid var(--secondary-color);\n    transform: translate(1.5rem, -1.5rem);\n    border-radius: 50px;\n    z-index: 1;\n\n    display: grid;\n    place-items: center;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  transform: translate(-1.5rem, 1.5rem);\n  width: 23rem;\n  height: 100%;\n`;\n","import React from 'react';\nimport { ReactNode } from 'react';\nimport logoImg from '../../assets/logo.svg';\n\nimport {\n  Container,\n  SubContainer,\n  FormBordersDesign,\n  FormContainer,\n  Hero,\n} from './styles';\n\ninterface HeroProps {\n  children: ReactNode;\n}\n\nexport function LandingPageLayout({ children }: HeroProps) : JSX.Element {\n  return (\n    <Container>\n      <SubContainer>\n        <Hero>\n          <img src={ logoImg } alt=\"Itaú\"/>\n          <h1>Quiz</h1>\n        </Hero>\n        <FormBordersDesign>\n          <div className=\"blue-shadow\" />\n          <div className=\"blue-border\">\n            <FormContainer>\n              {children}\n            </FormContainer>\n          </div>\n        </FormBordersDesign>\n      </SubContainer>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { ReactNode, createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext<AuthContextType>({} as AuthContextType );\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\ninterface AuthData {\n  token: string;\n  rehydrated: boolean;\n}\n\ninterface AuthContextType {\n  auth: AuthData;\n  updateAuth: (token: string) => void;\n}\n\nexport function useAuth() : AuthContextType {\n  const {auth, updateAuth} = useContext(AuthContext);\n  return {auth, updateAuth};\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) : JSX.Element {\n  const [auth, setAuth] = useState({\n    token: '',\n    rehydrated: false,\n  });\n\n  function rehydrate() {\n    const data = localStorage.getItem('auth');\n    data && setAuth(prevState => ({\n      ...prevState,\n      token: JSON.parse(data),\n      rehydrated: true,\n      }));\n  }\n  \n  useEffect(() => {\n    rehydrate();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('auth', JSON.stringify(auth.token));\n  }, [auth]);\n\n  function updateAuth(token: string) {\n    setAuth(prevState => ({\n      ...prevState,\n      token,\n      rehydrated: true,\n      }));\n  } \n\n  return (\n    <AuthContext.Provider value={{auth, updateAuth}}>\n      { children }\n    </AuthContext.Provider>\n  );\n}\n","import axios from 'axios';\n\n// export const api = axios.create({\n//   baseURL: 'http://18.231.190.153:3000',\n// });\n\nexport const api = axios.create({\n  baseURL: 'https://eea2da74959d.ngrok.io',\n});\n\n\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h1 {\n    margin: 3.5rem 0 2.5rem 0;\n    font-size: 2rem;\n    color: var(--primary-color);\n  }\n\n  p {\n    margin-bottom: 4rem;\n    font-size: 1.2rem;\n    letter-spacing: 0.045rem;\n  }\n\n  label {\n    display: block;\n    width: 23rem;\n    padding-left: 1rem;\n    font-size: 1.1rem;\n  }\n\n  input {\n    display: block;\n    width: 100%;\n    padding: 0.9rem;\n    margin: 0.6rem 0 3.125rem 0;\n    border: 1px solid var(--input-border);\n    border-radius: 6px;\n    background-color: var(--input-background);\n    color: var(--input-text);\n    font-weight: 600;\n    letter-spacing: 0.01rem;\n\n    &:focus {\n      outline: none;\n      border: 2px solid var(--primary-color);\n      background-color: var(--input-focus);\n    }\n  }\n\n  div {\n    width: 100%;\n    display: grid;\n    place-items: center;\n\n    &:last-child {\n      margin-top: 1.25rem;\n    }\n\n    input[type=\"submit\"] {\n      padding: 0.8rem;\n      cursor: pointer;\n      width: 12.5rem;\n      border: none;\n      background-color: var(--primary-color);\n      color: var(--shape);\n      font-size: 1.25rem;\n      margin-bottom: 0.8rem;\n    }\n\n    a {\n      cursor: pointer;\n      text-decoration: none;\n      color: var(--text-body);\n    }\n  }\n`;","import React from 'react';\nimport { LandingPageLayout } from '../../components/LandingPageLayout';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../../hooks/auth';\nimport { api } from '../../services/api';\n\nimport { Form } from './styles';\n\ntype Inputs = {\n  email: string;\n  password: string;\n};\n\nexport function Login() : JSX.Element {\n  const {updateAuth} = useAuth();\n  const history = useHistory();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<Inputs>();\n  \n  const onSubmit: SubmitHandler<Inputs> = async (user) => {\n    try {\n      const { data } = await api.post('/authenticate', user, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      updateAuth(data.token);\n      history.push('/');\n    } catch (error) { console.log(error) }\n  }; \n\n  console.log('login page')\n  return (\n    <LandingPageLayout>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <h1>Quizes</h1>\n        <p>Entrar na plataforma</p>\n        \n        <div>\n          <label>E-mail</label>\n          <input\n            {...register(\"email\", {\n              required: { value: true, message: 'Este campo é obrigatório' },\n              pattern: { value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/, message: 'E-mail inválido'},\n            })}\n            />\n          {errors.email && <span>{errors.email.message}</span>}\n          {console.log(register)}\n        </div>\n\n        <div>\n          <label>Senha</label>\n          <input\n            type=\"password\"\n            {...register(\"password\", {\n              required: { value: true, message: 'Este campo é obrigatório' },\n            })}\n            />\n          {errors.password && <span>{errors.password.message}</span>}\n        </div>\n\n        <div>\n          <input type=\"submit\" value=\"Entrar\" />\n          <Link to=\"/forgot-password\">Esqueci minha senha</Link>\n        </div>\n      </Form>\n    </LandingPageLayout>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h1 {\n    margin: 3.5rem 0 2.5rem 0;\n    font-size: 2rem;\n    color: var(--primary-color);\n  }\n\n  p {\n    margin-bottom: 4rem;\n    font-size: 1.2rem;\n    letter-spacing: 0.045rem;\n  }\n\n  p.password-instructions {\n    font-size: 1.1rem;\n    margin: 0.8rem 1rem 3.5rem 1rem;\n    line-height: 2rem;\n  }\n\n  label {\n    display: block;\n    width: 23rem;\n    padding-left: 1rem;\n    font-size: 1.1rem;\n  }\n\n  input {\n    display: block;\n    width: 100%;\n    padding: 0.9rem;\n    margin: 0.6rem 0 3.125rem 0;\n    border: 1px solid var(--input-border);\n    border-radius: 6px;\n    background-color: var(--input-background);\n    color: var(--input-text);\n    font-weight: 600;\n    letter-spacing: 0.01rem;\n\n    &:focus {\n      outline: none;\n      border: 2px solid var(--primary-color);\n      background-color: var(--input-focus);\n    }\n  }\n\n  div {\n    width: 100%;\n    display: grid;\n    place-items: center;\n\n    &:last-child {\n      margin-top: 0.5rem;\n    }\n\n    input[type=\"submit\"] {\n      padding: 0.8rem;\n      cursor: pointer;\n      width: 12.5rem;\n      border: none;\n      background-color: var(--primary-color);\n      color: var(--shape);\n      font-size: 1.25rem;\n      margin-bottom: 0.8rem;\n    }\n\n    a {\n      cursor: pointer;\n      text-decoration: none;\n      color: var(--text-body);\n    }\n  }\n`;","import React from 'react';\nimport { LandingPageLayout } from '../../components/LandingPageLayout';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { api } from '../../services/api';\n\nimport { Form } from './styles';\n\ntype Inputs = {\n  email: string;\n};\n\nexport function ForgotPassword() : JSX.Element {\n  const history = useHistory();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<Inputs>();\n  \n  const onSubmit: SubmitHandler<Inputs> = async (email) => {\n    try {\n      await api.post('/forgot_password', email);\n      history.push('/');\n    } catch (error) { console.log(error) }\n  }; \n\n  return (\n    <LandingPageLayout>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <h1>Quizes</h1>\n        <p>Redefinir senha</p>\n        \n        <div>\n          <label>E-mail</label>\n          <input\n            {...register(\"email\", {\n              required: { value: true, message: 'Este campo é obrigatório' },\n              pattern: { value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/, message: 'E-mail inválido' },\n            })}\n            />\n          {errors.email && <span>{errors.email.message}</span>}\n        </div>\n\n        <p className=\"password-instructions\">Informe o e-mail para o qual você deseja redefinir a senha.</p>\n\n        <div>\n          <input type=\"submit\" value=\"Enviar\" />\n          <Link to=\"/login\">Voltar para login</Link>\n        </div>\n      </Form>\n    </LandingPageLayout>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h1 {\n    margin: 3.5rem 0 2.5rem 0;\n    font-size: 2rem;\n    color: var(--primary-color);\n  }\n\n  p {\n    margin-bottom: 4rem;\n    font-size: 1.2rem;\n    letter-spacing: 0.045rem;\n  }\n\n  p.password-instructions {\n    font-size: 1.1rem;\n    margin: 0.8rem 1rem 3.5rem 1rem;\n    line-height: 2rem;\n  }\n\n  label {\n    display: block;\n    width: 23rem;\n    padding-left: 1rem;\n    font-size: 1.1rem;\n  }\n\n  input {\n    display: block;\n    width: 100%;\n    padding: 0.9rem;\n    margin: 0.6rem 0 3.125rem 0;\n    border: 1px solid var(--input-border);\n    border-radius: 6px;\n    background-color: var(--input-background);\n    color: var(--input-text);\n    font-weight: 600;\n    letter-spacing: 0.01rem;\n\n    &:focus {\n      outline: none;\n      border: 2px solid var(--primary-color);\n      background-color: var(--input-focus);\n    }\n  }\n\n  div {\n    width: 100%;\n    display: grid;\n    place-items: center;\n\n    &:last-child {\n      margin-top: 0.5rem;\n    }\n\n    input[type=\"submit\"] {\n      padding: 0.8rem;\n      cursor: pointer;\n      width: 12.5rem;\n      border: none;\n      background-color: var(--primary-color);\n      color: var(--shape);\n      font-size: 1.25rem;\n      margin-bottom: 0.8rem;\n    }\n\n    a {\n      cursor: pointer;\n      text-decoration: none;\n      color: var(--text-body);\n    }\n  }\n`;","import React from 'react';\nimport { LandingPageLayout } from '../../components/LandingPageLayout';\nimport { Link } from 'react-router-dom';\n// , useParams\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useAuth } from '../../hooks/auth';\nimport { api } from '../../services/api';\n\nimport { Form } from './styles';\n\ntype Inputs = {\n  password: string;\n  confirm: string;\n};\n\nexport function ResetPassword() : JSX.Element {\n  const { updateAuth } = useAuth();\n  // const { token } = useParams();\n\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: { errors }\n  } = useForm<Inputs>();\n  \n  const onSubmit: SubmitHandler<Inputs> = async (data) => {\n    console.log(data);\n    // try {\n    //   const { data } = await api.post('/reset_password', { password: data.password }, {\n    //   headers: {\n    //     Authorization: `Bearer ${token}`\n    //   }\n    // });\n    //   updateAuth(token);\n    // } catch (error) { console.log(error) }\n  }; \n\n  return (\n    <LandingPageLayout>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <h1>Quizes</h1>\n        <p>Redefinir senha</p>\n        \n        <div>\n          <label>Nova senha</label>\n          <input\n            type=\"password\"\n            {...register(\"password\", {\n              required: { value: true, message: 'Este campo é obrigatório' },\n            })}\n            />\n          {errors.password && <span>{errors.password.message}</span>}\n        </div>\n\n        <div>\n          <label>Confirmação nova senha</label>\n          <input\n            type=\"password\"\n            {...register(\"confirm\", {\n              required: { value: true, message: 'Este campo é obrigatório'},\n              validate: (confirm) => confirm === getValues('password') || 'Senhas não coincidem',\n            })}\n            />\n          {errors.confirm && <span>{errors.confirm.message}</span>}\n        </div>\n\n        <div>\n          <input type=\"submit\" value=\"Entrar\" />\n          <Link to=\"/login\">Voltar para login</Link>\n        </div>\n      </Form>\n    </LandingPageLayout>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 2.625rem 2.625rem 2.625rem 0;\n  overflow-x: hidden;\n`;\n\nexport const Aside = styled.aside`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 2.625rem 4.5rem;\n\n  img  {\n    width: 6.375rem;\n    height: 6.375rem;\n    margin-bottom: 5rem;\n  }\n`;\n\nexport const AsideContainer = styled.div`\n  transform: translate(-1rem, 0.75rem);\n  width: 100%;\n  height: 100%;\n  display: grid;\n  place-items: center;\n\n  h1 {\n    margin-bottom: 1rem;\n    font-size: 2.625rem;\n    color: var(--secondary-color);\n  }\n`;\n\nexport const AsideBordersDesign = styled.section`\n  position: relative;\n  width: 15.5rem;\n  height: 10.625rem;\n  background: var(--shape);\n  border-radius: 30px;\n\n  div.blue-shadow {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: var(--secondary-color);\n    transform: translate(-1.1875rem, 0.5625rem);\n    border-radius: 30px;\n    z-index: -1;\n  }\n\n  div.blue-border {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border: 5px solid var(--yellow-border);\n    transform: translate(1rem, -0.75rem);\n    border-radius: 30px;\n    z-index: 1;\n\n    display: grid;\n    place-items: center;\n  }\n`;\n","import React, { ReactNode } from 'react';\nimport logoImg from '../../assets/logo.svg';\n\nimport { Container, Aside, AsideBordersDesign, AsideContainer } from './styles';\n\ninterface QuizPageLayoutProps {\n  children: ReactNode;\n}\n\nexport function QuizPageLayout({children} : QuizPageLayoutProps) : JSX.Element {\n  return (\n    <Container>\n      <Aside>\n        <img src={ logoImg } alt=\"Itaú\"/>\n        <AsideBordersDesign>\n          <div className=\"blue-shadow\" />\n          <div className=\"blue-border\">\n            <AsideContainer>\n              <h1>Quizes</h1>\n            </AsideContainer>\n          </div>\n        </AsideBordersDesign>\n      </Aside>\n      {children}\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const InputContainer = styled.div`\n  label {\n    display: block;\n    width: 23rem;\n    padding-left: 1rem;\n    font-size: 1.1rem;\n  }\n\n  input, select {\n    display: block;\n    width: 100%;\n    padding: 0.9rem;\n    margin: 0.6rem 0 3.125rem 0;\n    border: 1px solid var(--input-border);\n    border-radius: 6px;\n    background-color: var(--input-background);\n    color: var(--text-body);\n    letter-spacing: 0.01rem;\n\n    &:focus {\n      outline: none;\n      border: 2px solid var(--primary-color);\n      background-color: var(--input-focus);\n    }\n\n    &::placeholder {\n      color: var(--text-body);\n    }\n  }\n`;","import React from 'react';\nimport { FieldError, UseFormRegisterReturn } from 'react-hook-form';\n\nimport { InputContainer } from './styles';\n\nexport interface TextInputProps {\n  id: string;\n  label?: string;\n  register: UseFormRegisterReturn;\n  error?: FieldError;\n  type?: string;\n  placeholder?: string\n  className?: string;\n}\n\nexport function TextInput({ register, error, label, id, type, placeholder, className }: TextInputProps) : JSX.Element {\n  return (\n      <InputContainer className={className}>\n        <label htmlFor={id}>{label}</label>\n        <input\n          {...register}\n          id={id}\n          type={type}\n          placeholder={placeholder}\n          />\n        {error && <span>{error.message}</span>}\n      </InputContainer>\n  );\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 2.5625rem 2.3125rem;\n  border: 2px solid var(--primary-color);\n  border-radius: 6px;\n  margin-bottom: 3.125rem;\n\n  display: grid;\n  grid-template-columns: minmax(300px, 3fr) minmax(200px, 1fr);\n  gap: 3.75rem;\n\n  @media (max-width: 1450px) {\n    grid-template-columns: 100%;\n    grid-template-rows: 2fr 1fr;\n  }\n`;\n\nexport const IndexAndQuestion = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 3.125rem minmax(0, 1fr);\n  gap: 3.75rem;\n  align-items: end;\n  margin-bottom: 3.125rem;\n\n  p {\n    font-size: 1.5rem;\n    font-weight: bold;\n    padding: 0.45rem 0.65rem;\n    background-color: var(--input-focus);\n    border: 1px solid var(--input-border);\n    border-radius: 6px;\n  }\n\n  div {\n    input {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const OptionsAndDescriptions = styled.div`\n  min-width: 0;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 9rem 5.6rem minmax(0, 1fr);\n  gap: 4.25rem;\n\n  & > div {\n    display: grid;\n    grid-template-rows: auto 3.125rem 3.125rem;\n    row-gap: 1.8rem;\n\n    p {\n      margin: 0 0 -1.25rem 0.9rem;\n    }\n  }\n\n  div.description {\n    div {\n      display: flex;\n      align-items: center;\n      justify-content: left;\n      padding: 1rem;\n      background-color: var(--primary-color);\n      border-radius: 6px;\n      border: 1px solid var(--input-border);\n      color: var(--shape);\n      font-weight: bold;\n      font-size: 1.125rem;\n    }\n  }\n\n  div.options {\n    div {\n      width: fit-content;\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      justify-content: left;\n      padding: 1rem;\n      background-color: var(--input-background);\n      border-radius: 6px;\n      border: 2px solid var(--primary-color);\n      font-weight: bold;\n      font-size: 1.125rem;\n    }\n  }\n\n  div.feedbacks {\n    div {\n      min-width: 0;\n    }\n\n    input {\n      margin: 0;\n    }\n  }\n`;","/* eslint-disable @typescript-eslint/no-explicit-any */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport React from 'react';\nimport { FieldErrors, UseFormRegister } from 'react-hook-form';\n\nimport { TextInput } from '../TextInput';\n\nimport { Container, IndexAndQuestion, OptionsAndDescriptions } from './styles';\n\ninterface FactOrFakeQuestionProps {\n  index: string;\n  register: UseFormRegister<any>;\n  errors?: FieldErrors;\n}\n\nexport function FactOrFakeQuestion({index, register, errors} : FactOrFakeQuestionProps ) : JSX.Element {\n  const question = `question-${index}`;\n  const factText = `fact-${index}`;\n  const fakeText = `fake-${index}`;\n  const fileInput = `file-${index}`;\n\n  return (\n      <Container>\n        <div>\n          <IndexAndQuestion>\n            <p>{ index.padStart(2, '0') }</p>\n            <TextInput\n              register={register(question, {\n                required: { value: true, message: 'Este campo é obrigatório' },\n              } )}\n              label=\"Pergunta\"\n              id={question}\n              error={errors && errors[question]}\n              placeholder=\"Digite\"\n            />\n          </IndexAndQuestion>\n          <OptionsAndDescriptions>\n            <div className=\"description\">\n              <p>Descrição</p>\n              <div>Fato</div>\n              <div>Fake</div>\n            </div>\n\n            <div className=\"options\">\n              <p>Resposta</p>\n              <div>V</div>\n              <div>F</div>\n            </div>\n\n            <div className=\"feedbacks\">\n              <p>Texto complementar</p>\n              <TextInput\n                register={register(factText, {\n                  required: { value: true, message: 'Este campo é obrigatório' },\n                } )}\n                id={factText}\n                error={errors && errors[factText]}\n                placeholder=\"Fato\"\n              />\n              <TextInput\n                register={register(fakeText, {\n                  required: { value: true, message: 'Este campo é obrigatório' },\n                } )}\n                id={fakeText}\n                error={errors ? errors[fakeText] : null}\n                placeholder=\"Fake\"\n              />\n            </div>\n          </OptionsAndDescriptions>\n        </div>\n        <TextInput\n          className=\"file-input\"\n          type=\"file\"\n          register={register(fileInput)}\n          label=\"Adicionar ícone\"\n          id={fileInput}\n          error={errors && errors[fileInput]}\n          placeholder=\"Upload\"\n        />\n      </Container>\n  );\n}","import styled from 'styled-components';\n\nexport const Quiz = styled.form`\n  background-color: var(--shape);\n  max-width: 91.875rem;\n  height: 100%;\n  border-radius: 10px;\n  margin-left: 24.5rem;\n  padding: 3.375rem 4rem 4rem 7rem;\n\n  section:first-child {\n    padding: 0 2.3125rem;\n  \n    h1 {\n      margin: 0 0 3.125rem 0.9rem;\n    }\n\n    & > div {\n      display: grid;\n      grid-template-columns: minmax(200px, 3fr) minmax(200px, 1fr);\n      gap: 3.75rem;\n\n      @media (max-width: 1080px) {\n        display: block;\n      }\n\n      div {\n        label {\n          display: block;\n          width: 23rem;\n          padding-left: 1rem;\n          font-size: 1.1rem;\n        }\n\n        input, select {\n          display: block;\n          width: 100%;\n          padding: 0.9rem;\n          margin: 0.6rem 0 3.125rem 0;\n          border: 1px solid var(--input-border);\n          border-radius: 6px;\n          background-color: var(--input-background);\n          color: var(--text-body);\n          letter-spacing: 0.01rem;\n\n          &:focus {\n            outline: none;\n            border: 2px solid var(--primary-color);\n            background-color: var(--input-focus);\n          }\n\n          &::placeholder {\n            color: var(--text-body);\n          }\n        }\n      }\n    }\n\n  }\n\n  div.hr {\n    width: 100%;\n    height: 0;\n    border: 1px solid var(--primary-color);\n    border-radius: 10px;\n  }\n\n  section {\n    h1 {\n      margin: 3.125rem 3.2125rem 1.625rem;\n    }\n  }\n\n  div.buttons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    button {\n      padding: 0.8rem;\n      cursor: pointer;\n      width: 12.5rem;\n      border: none;\n      background-color: var(--primary-color);\n      color: var(--shape);\n      font-size: 1.25rem;\n      margin: 0 1.875rem;\n      border-radius: 6px;\n      font-weight: 600;\n\n      &[type=\"button\"] {\n        background-color: var(--input-focus);\n        color: var(--text-body);\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { QuizPageLayout } from '../../components/QuizPageLayout';\nimport { TextInput } from '../../components/TextInput';\nimport { FactOrFakeQuestion } from '../../components/FactOrFakeQuestion';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useAuth } from '../../hooks/auth';\nimport { api } from '../../services/api';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { Quiz } from './styles';\n\ntype Inputs = {\n  title: string;\n  password: string;\n};\n\nexport function QuizForm() : JSX.Element {\n  const {updateAuth} = useAuth();\n  const history = useHistory();\n  const NUMBER_OF_QUESTIONS : string[] = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<Inputs>();\n\n  const onSubmit: SubmitHandler<Inputs> = async (data ) => {\n    console.log(data)\n    try {\n      // const { data } = await api.post('/authenticate', user, {\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      // });\n      // updateAuth(data.token);\n      history.push('/quiz-download/1');\n    } catch (error) { console.log(error) }\n  }; \n\n  return (\n    <QuizPageLayout>\n      <Quiz onSubmit={handleSubmit(onSubmit)}>\n        <section>\n          <h1>Sobre o quiz</h1>\n          <div>\n            <TextInput\n                register={register(\"title\", {\n                  required: { value: true, message: 'Este campo é obrigatório' },\n                })}\n                label=\"Título do Quiz\"\n                id=\"title\"\n                error={errors.title}\n                placeholder=\"Digite\"\n            />\n            <div>\n              <label>Tipo de Quiz</label>\n              <select name=\"\" defaultValue=\"\">\n                <option value=\"\" disabled hidden>Selecione</option>\n                <option value=\"\">Fato ou Fake</option>\n              </select>\n            </div>\n          </div>\n        </section>\n        <div className=\"hr\"/>\n        <section>\n          <h1>Quiz</h1>\n          {NUMBER_OF_QUESTIONS.map((index) => (\n            <FactOrFakeQuestion key={index} index={ index } register={register} />\n          ))}\n        </section>\n        <div className=\"buttons\">\n          <button type=\"button\">Cancelar</button>\n          <button type=\"submit\">Criar Quiz</button>\n        </div>\n      </Quiz>\n    </QuizPageLayout>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/close.b382c48a.svg\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  place-items: center;\n  height: 68vh;\n  margin-left: 24.5rem;\n\n  & > div {\n    position: relative;\n    display: grid;\n    align-items: start;\n    justify-content: center;\n    width: 46.875rem;\n    height: 25rem;\n    background-color: var(--shape);\n    border-radius: 10px;\n\n    button.close-btn {\n      position: absolute;\n      top: 0;\n      right: 0;\n      border: none;\n      background-color: transparent;\n      \n      img {\n        width: 2rem;\n        margin: 1.5rem;\n      }\n    }\n\n    h1 {\n      justify-self: center;\n      margin-top: 7.5rem;\n      font-size: 3.125rem;\n      font-weight: 700;\n      line-height: 3rem;\n      letter-spacing: 0.03125rem;\n    }\n\n    div.buttons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 2rem;\n\n    button {\n      padding: 0.8rem 2rem;\n      cursor: pointer;\n      border: none;\n      background-color: var(--primary-color);\n      color: var(--shape);\n      font-size: 1.25rem;\n      margin: 0 1.875rem;\n      border-radius: 6px;\n      font-weight: 600;\n\n      &[type=\"button\"] {\n        background-color: var(--input-focus);\n        color: var(--text-body);\n      }\n    }\n  }\n  }\n`;","import React from 'react';\nimport { QuizPageLayout } from '../../components/QuizPageLayout';\n\nimport closeImg from '../../assets/close.svg';\n\nimport { Container } from './styles';\n\nexport function QuizDownload () : JSX.Element {\n\n  console.log('Quiz Download')\n  return (\n    <QuizPageLayout>\n      <Container>\n        <div>\n          <button type=\"button\" className=\"close-btn\">\n            <img src={closeImg} alt=\"Fechar\"/>\n          </button>\n          <h1>Quiz feito com sucesso!</h1>\n          <div className=\"buttons\">\n            <button type=\"button\">Voltar para edição</button>\n            <button type=\"submit\">Download de Quiz</button>\n          </div>\n        </div>\n      </Container>\n    </QuizPageLayout>\n  );\n}\n","import React from 'react';\nimport { ReactNode } from 'react';\nimport { Route, Redirect, RouteComponentProps } from 'react-router-dom';\nimport { useAuth } from '../hooks/auth';\n\ninterface PrivateRouteProps  {\n  children: ReactNode;\n  path: string;\n}\n\nexport function PrivateRoute({ children, path }: PrivateRouteProps) : JSX.Element {\n  const { auth } = useAuth();\n\n  return (\n    auth.rehydrated\n    ? (\n      <Route\n        path={path}\n        render={({ location }: RouteComponentProps ) => {\n          return (\n            auth.token\n            ? (\n              children\n            )\n            : (\n              <Redirect\n                to={{\n                    pathname: \"/login\",\n                    state: { from: location }\n                }}\n              />\n            ))}\n        }\n      />\n    )\n    : <h1>Loading</h1>\n    );\n}\n          ","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --primary-color: #FF9738;\n    --secondary-color: #12499F;\n\n    --shape: #FFFFFF;\n    --text-body: #2C2C2C;\n\n    --input-background: #FF973819;\n    --input-border: #CED1D69A;\n    --input-focus: #FF97384D;\n    --input-text: #676A79;\n\n    --yellow-border: #FDED0B;\n  }\n  \n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html {\n    @media (max-width: 1200px) {\n      font-size: 87.5%;\n    }\n\n    @media (max-width: 1100px) {\n      font-size: 0.75rem;\n    }\n  }\n\n  body {\n    background: var(--primary-color);\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, textarea, button {\n    font-family: 'Myriad Pro', 'Source Sans Pro', sans-serif;\n    font-weight: 400;\n    color: var(--text-body);\n    letter-spacing: 0.01125rem;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 600;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  [disabled] {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n`;\n","import React from 'react';\nimport { Login } from './pages/Login';\nimport { ForgotPassword } from './pages/ForgotPassword';\nimport { ResetPassword } from './pages/ResetPassword';\nimport { QuizForm } from './pages/QuizForm';\nimport { QuizDownload } from './pages/QuizDownload';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useAuth } from './hooks/auth';\n\nimport { PrivateRoute } from './routes/PrivateRoute';\n\nimport { GlobalStyle } from './styles/global';\n\nfunction App() : JSX.Element {\n  const { auth } = useAuth();\n\n  return (\n    auth.rehydrated\n    ? (\n      <>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n                return (\n                  auth.token\n                  ? <Redirect to=\"/quiz-form\" />\n                  : <Redirect to=\"/login\" /> \n                )\n            }}\n          />\n          <Route path=\"/login\" exact component={ Login } />\n          <Route path=\"/password-reset/:token\" component={ ResetPassword } />\n          <Route path=\"/forgot-password\" component={ ForgotPassword } />\n          <PrivateRoute path=\"/quiz-form\">\n            <QuizForm />\n          </PrivateRoute>\n          <PrivateRoute path=\"/quiz-download/:id\">\n            <QuizDownload />\n          </PrivateRoute>\n\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n        <GlobalStyle />\n      </>\n    )\n    : <h1>Loading</h1>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals : () => void = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './hooks/auth';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}